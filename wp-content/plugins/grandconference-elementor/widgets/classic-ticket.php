<?phpnamespace GrandConferenceElementor\Widgets;use Elementor\Widget_Base;use Elementor\Controls_Manager;if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly/** * Elementor Portfolio Classic * * Elementor widget for portfolio posts * * @since 1.0.0 */class GrandConference_Classic_Ticket extends Widget_Base {	/**	 * Retrieve the widget name.	 *	 * @since 1.0.0	 *	 * @access public	 *	 * @return string Widget name.	 */	public function get_name() {		return 'grandconference-classic-ticket';	}	/**	 * Retrieve the widget title.	 *	 * @since 1.0.0	 *	 * @access public	 *	 * @return string Widget title.	 */	public function get_title() {		return __( 'Classic Ticket', 'grandconference-elementor' );	}	/**	 * Retrieve the widget icon.	 *	 * @since 1.0.0	 *	 * @access public	 *	 * @return string Widget icon.	 */	public function get_icon() {		return 'eicon-slider-push';	}	/**	 * Retrieve the list of categories the widget belongs to.	 *	 * Used to determine where to display the widget in the editor.	 *	 * Note that currently Elementor supports only one category.	 * When multiple categories passed, Elementor uses the first one.	 *	 * @since 1.0.0	 *	 * @access public	 *	 * @return array Widget categories.	 */	public function get_categories() {		return [ 'grandconference-theme-classic-widgets-category' ];	}	/**	 * Retrieve the list of scripts the widget depended on.	 *	 * Used to set scripts dependencies required to run the widget.	 *	 * @since 1.0.0	 *	 * @access public	 *	 * @return array Widget scripts dependencies.	 */	public function get_script_depends() {		return array();	}	/**	 * Register the widget controls.	 *	 * Adds different input fields to allow the user to change and customize the widget settings.	 *	 * @since 1.0.0	 *	 * @access protected	 */	protected function register_controls() {		$this->start_controls_section(			'section_content',			[				'label' => __( 'Content', 'grandconference-elementor' ),			]		);				$this->add_control(			'columns',			[				'label' => __( 'Columns', 'grandconference-elementor' ),				'type' => Controls_Manager::SLIDER,				'default' => [					'size' => 2,				],				'range' => [					'px' => [						'min' => 2,						'max' => 4,						'step' => 1,					]				],			]		);				$this->end_controls_section();						$this->start_controls_section(			'section_highlight_style',			array(				'label'      => esc_html__( 'Highlight', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_group_control(			\Elementor\Group_Control_Typography::get_type(),			[				'name' => 'highlight_typography',				'label' => __( 'Higlight Title Typography', 'grandconference-elementor' ),				'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .testimonial_customer h6',			]		);			$this->add_control(			'highlight_title_color',			[				'label' => __( 'Higlight Title Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#ffffff',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper_recommend' => 'color: {{VALUE}}',				],			]		);				$this->add_control(			'highlight_bg_color',			[				'label' => __( 'Higlight Background Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#FF2D54',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper_recommend' => 'background-color: {{VALUE}}',				],			]		);				$this->add_control(			'highlight_border_color',			[				'label' => __( 'Higlight Border Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#FF2D54',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .featured' => 'border-color: {{VALUE}}',				],			]		);				$this->add_responsive_control(			'highlight_border_radius',			[				'label' => __( 'Higlight Border Radius', 'grandconference-elementor' ),				'type' => Controls_Manager::DIMENSIONS,				'size_units' => [ 'px' ],				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket, {{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket .ticket_wrapper_border' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket .ticket_wrapper_recommend' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} 0 0;',				],			]		);				$this->end_controls_section();				$this->start_controls_section(			'section_title_style',			array(				'label'      => esc_html__( 'Title', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_group_control(				\Elementor\Group_Control_Typography::get_type(),				[					'name' => 'title_typography',					'label' => __( 'Title Typography', 'grandconference-elementor' ),					'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper h3',				]			);				$this->add_control(			'title_color',			[				'label' => __( 'Title Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper h3' => 'color: {{VALUE}}',				],			]		);				$this->end_controls_section();				$this->start_controls_section(			'section_subtitle_style',			array(				'label'      => esc_html__( 'Sub Title', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_group_control(			\Elementor\Group_Control_Typography::get_type(),			[				'name' => 'subtitle_typography',				'label' => __( 'Sub Title Typography', 'grandconference-elementor' ),				'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_desc',			]		);				$this->add_control(			'subtitle_color',			[				'label' => __( 'Sub Title Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_desc' => 'color: {{VALUE}}',				],			]		);				$this->end_controls_section();				$this->start_controls_section(			'section_content_style',			array(				'label'      => esc_html__( 'Content', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_group_control(				\Elementor\Group_Control_Typography::get_type(),				[					'name' => 'content_typography',					'label' => __( 'Content Typography', 'grandconference-elementor' ),					'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.bordercolor',				]			);				$this->add_control(			'content_color',			[				'label' => __( 'Content Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.bordercolor' => 'color: {{VALUE}}',				],			]		);				$this->add_control(			'content_bg_color',			[				'label' => __( 'Content background Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#ffffff',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_wrapper_border' => 'background: {{VALUE}}',				],			]		);				$this->add_control(			'content_border_color',			[				'label' => __( 'Content Border Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#e1e1e1',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.bordercolor' => 'border-color: {{VALUE}}',				],			]		);				$this->add_responsive_control(			'content_padding',			[				'label' => __( 'Content Padding', 'grandconference-elementor' ),				'type' => Controls_Manager::DIMENSIONS,				'size_units' => [ 'px' ],				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket .ticket_wrapper li' => 'padding: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',				],			]		);				$this->end_controls_section();				$this->start_controls_section(			'section_pricing_style',			array(				'label'      => esc_html__( 'Pricing', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_group_control(			\Elementor\Group_Control_Typography::get_type(),			[				'name' => 'pricing_typography',				'label' => __( 'Pricing Typography', 'grandconference-elementor' ),				'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.price_row',			]		);				$this->add_control(			'pricing_color',			[				'label' => __( 'Pricing Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.price_row' => 'color: {{VALUE}}',				],			]		);				$this->end_controls_section();				$this->start_controls_section(			'section_button_style',			array(				'label'      => esc_html__( 'Button', 'grandconference-elementor' ),				'tab'        => Controls_Manager::TAB_STYLE,				'show_label' => false,			)		);				$this->add_control(			'button_bg_color',			[				'label' => __( 'Button Background Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#FF2D55',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button' => 'background-color: {{VALUE}}',				],			]		);				$this->add_control(			'button_border_color',			[				'label' => __( 'Button Border Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#FF2D55',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button' => 'border-color: {{VALUE}}',				],			]		);				$this->add_control(			'button_font_color',			[				'label' => __( 'Button Font Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#ffffff',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button' => 'color: {{VALUE}}',				],			]		);				$this->add_control(			'button_hover_bg_color',			[				'label' => __( 'Button Hover Background Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button:hover' => 'background-color: {{VALUE}}',				],			]		);				$this->add_control(			'button_hover_border_color',			[				'label' => __( 'Button Hover Border Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#000000',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button:hover' => 'border-color: {{VALUE}}',				],			]		);				$this->add_control(			'button_hover_font_color',			[				'label' => __( 'Button Hover Font Color', 'grandconference-elementor' ),				'type' => Controls_Manager::COLOR,				'default' => '#ffffff',				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button:hover' => 'color: {{VALUE}}',				],			]		);				$this->add_group_control(			\Elementor\Group_Control_Typography::get_type(),			[				'name' => 'button_typography',				'label' => __( 'Button Typography', 'grandconference-elementor' ),				'selector' => '{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button',			]		);				$this->add_responsive_control(			'button_border_radius',			[				'label' => __( 'Button Border Radius', 'grandconference-elementor' ),				'type' => Controls_Manager::DIMENSIONS,				'size_units' => [ 'px' ],				'selectors' => [					'{{WRAPPER}} .ticket-wrapper .ticket_content_wrapper .ticket_wrapper li.button_row button' => 'border-radius: {{TOP}}{{UNIT}} {{RIGHT}}{{UNIT}} {{BOTTOM}}{{UNIT}} {{LEFT}}{{UNIT}};',				],			]		);				$this->end_controls_section();	}	/**	 * Render the widget output on the frontend.	 *	 * Written in PHP and used to generate the final HTML.	 *	 * @since 1.0.0	 *	 * @access protected	 */	protected function render() {		include(GRANDCONFERENCE_ELEMENTOR_PATH.'templates/classic-ticket/index.php');	}	/**	 * Render the widget output in the editor.	 *	 * Written as a Backbone JavaScript template and used to generate the live preview.	 *	 * @since 1.0.0	 *	 * @access protected	 */	protected function content_template() {		return '';	}}